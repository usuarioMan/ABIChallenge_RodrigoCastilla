# =======CONFIGURACIONES GENERALES Y PREPARACION DE ENTORNO=======

# Versión de la configuración de CircleCI
version: "2.1"

# Definición de esferas (orbs) para reutilización
orbs:
  node: circleci/node@5.1.0 # Se utiliza el orb 'circleci/node' en la versión 5.1.0
  sonarcloud: sonarsource/sonarcloud@2.0.0

# Configuraciones predeterminadas para el trabajo
defaults: &defaults
  docker:
    - image: cimg/python:3.11.1 # Imagen de Docker con Python 3.11.1
  working_directory: ~/project # Directorio de trabajo predeterminado

# Crear un entorno virtual (venv) y actualizar pip
prepare_venv: &prepare_venv
  run:
    name: Create venv
    command: |
      python -m venv venv
      source venv/bin/activate
      pip install --upgrade pip

# Instalar tox para gestionar entornos de prueba
prepare_tox: &prepare_tox
  run:
    name: Install tox
    command: |
      pip install --user tox

# Activar el entorno virtual y ejecutar script para obtener datos
fetch_data: &fetch_data
  run:
    name: Set script permissions and fetch data
    command: |
      source venv/bin/activate
      chmod +x ./scripts/fetch_kaggle_dataset.sh
      ./scripts/fetch_kaggle_dataset.sh

# =======DEFINICION DE TRABAJADOS Y PASOS DE EJECUCION=======
jobs:
  # Trabajo para probar la aplicación
  test_app:
    <<: *defaults
    working_directory: ~/project/house-prices-api
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Runnning app tests
          command: |
            tox

  # Trabajo para implementar la aplicación en Railway
  deploy_app_to_railway:
    <<: *defaults
    steps:
      - checkout:
          path: ~/project/
      - node/install:
          node-version: "16.13"
      - run: node --version
      - run: npm i -g @railway/cli
      - run:
          name: Deploy to Railway App (You must set RAILWAY_TOKEN env var)
          command: |
            cd house-prices-api && railway up --detach -s famed-board -e production

  # Trabajo para probar y cargar el modelo de regresión
  test_and_upload_regression_model:
    <<: *defaults
    working_directory: ~/project/model-package
    steps:
      - checkout:
          path: ~/project
      - *prepare_tox
      - run:
          name: Fetch the data
          command: |
            tox -e fetch_data
      - run:
          name: Test the model
          command: |
            tox
      - run:
          name: Publish model to Gemfury
          command: |
            tox -e publish_model

  # Este bloque define un trabajo de CircleCI llamado "deploy_app_container_via_railway".
  deploy_app_container_via_railway:
    # Utiliza un conjunto común de configuraciones predeterminadas mediante la técnica de anclaje (&defaults).
    <<: *defaults
    steps:
      # Configuración para utilizar Docker de forma remota en el entorno de ejecución de CircleCI.
      - setup_remote_docker:
          # Versión de Docker compatible; consulta la documentación de CircleCI para obtener las versiones admitidas.
          version: 20.10.18

      # Verifica y obtiene el código fuente del repositorio.
      - checkout:
          path: ~/project/

      # Instalación de Node.js en la versión 16.13.
      - node/install:
          node-version: "16.13"

      # Imprime la versión de Node.js instalada.
      - run: node --version

      # Instalación global de la interfaz de línea de comandos de Railway.
      - run: npm i -g @railway/cli

      # Construcción y ejecución del Dockerfile utilizando Railway.
      - run:
          name: Construir y ejecutar Dockerfile (ver https://docs.railway.app/deploy/dockerfiles)
          command: |
            cd house-prices-api && railway up --detach -s famed-board -e production

  # Trabajo para ejecutar análisis estático con SonarCloud
 sonarcloud_scan:
    <<: *defaults
    steps:
      - checkout
      - sonarcloud/scan:
          organization: $SONAR_ORGANIZATION
          token:
            secure: $SONAR_TOKEN
# Filtro que se aplica solo a las etiquetas (tags) en los cambios de git
tags_only: &tags_only
  filters:
    branches:
      ignore: /.*/
    tags:
      only: /^.*/

# Definición del flujo de trabajo
workflows:
  version: 2
  deploy_pipeline:
    jobs:
      - test_app
      # ESTA ES LA FORMA "tradicional de deployarlo pero ya tenemos la version dockerizada"
      #       - deploy_app_to_railway:
      #           requires:
      #             - test_app
      #           filters:
      #             branches:
      #               only:
      #                 - main
      #                 - dev
      # Subir después de que se crean las etiquetas en git
      - test_and_upload_regression_model:
          <<: *tags_only

      - deploy_app_container_via_railway:
          filters:
            branches:
              only:
                - main
                - dev
                
      - sonarcloud_scan:
          requires:
            - test_app
          filters:
            branches:
              only:
                - main
                - dev
